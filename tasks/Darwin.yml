---
- name: Install Xcode v{{ xcode_version }} # noqa: name[template]
  ansible.builtin.shell: |
    XCODES_USERNAME={{ lookup("env", "CCDC_APPLE_ID_USERNAME") }} \
    XCODES_PASSWORD={{ lookup("env", "CCDC_APPLE_ID_PASSWORD") }} \
    xcodes install {{ xcode_version }} --experimental-unxip
  args:
    creates: "/Applications/Xcode_{{ xcode_version }}.app"

# TODO: Check whether we still need these
# - name: Switch to Xcode {{ xcode_version }} # noqa: no-changed-when name[template]
#   ansible.builtin.command: xcodes select {{ xcode_version }}

# - name: Accept Xcode licence # noqa: no-changed-when
#   ansible.builtin.command: xcodebuild -license accept
#   become: true

- name: Get list of installed packages # noqa: no-changed-when
  ansible.builtin.command: pkgutil --pkgs
  register: pkgutil_packages

- name: Get list of packages available with Xcode
  ansible.builtin.find:
    path: /Applications/Xcode_{{ xcode_version }}.app/Contents/Resources/Packages/
    patterns: "*.pkg"
    recurse: no
  register: packages

- name: Install Xcode packages # noqa: deprecated-module
  ansible.builtin.include: install-pkg.yml
  vars:
    package_file: "{{ package }}"
    package_list: "{{ pkgutil_packages.stdout }}"
  with_items: "{{ packages.files | map(attribute='path') | list }}"
  loop_control:
    loop_var: package
