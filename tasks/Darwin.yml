---
- name: Install Xcode v{{ xcode_version }} # noqa: name[template]
  ansible.builtin.shell:
    cmd: | 
      set timeout 300
      ssh vagrant@{{ ansible_ssh_host }}
      export FASTLANE_SESSION="{{ FASTLANE_SESSION }}"
      export XCODES_USERNAME="{{ CCDC_APPLE_ID_USERNAME }}"
      export XCODES_PASSWORD="{{ CCDC_APPLE_ID_PASSWORD }}"
      xcodes install {{ xcode_version }} --select --use-fastlane-auth --experimental-unxip --no-superuser --no-color
  args:
    creates: "/Applications/Xcode-{{ xcode_version }}.app"
  delegate_to: localhost
  environment:
    FASTLANE_SESSION: "{{ FASTLANE_SESSION }}"
    XCODES_USERNAME: "{{ CCDC_APPLE_ID_USERNAME }}"
    XCODES_PASSWORD: "{{ CCDC_APPLE_ID_PASSWORD }}"
    PATH: /usr/local/bin:{{ ansible_env.PATH }}
  
- name: Accept Xcode licence # noqa: no-changed-when
  ansible.builtin.command: xcodebuild -license accept
  become: true

- name: Get list of installed packages # noqa: no-changed-when
  ansible.builtin.command: pkgutil --pkgs
  register: pkgutil_packages

- name: Get list of packages available with Xcode
  ansible.builtin.find:
    path: /Applications/Xcode_{{ xcode_version }}.app/Contents/Resources/Packages/
    patterns: "*.pkg"
    recurse: no
  register: packages

- name: Install Xcode packages # noqa: deprecated-module
  ansible.builtin.include_tasks: install-pkg.yml
  vars:
    package_file: "{{ package }}"
    package_list: "{{ pkgutil_packages.stdout }}"
  with_items: "{{ packages.files | map(attribute='path') | list }}"
  loop_control:
    loop_var: package
