---
- name: Downlaod Xcode v{{ xcode_version }}
  ansible.builtin.shell: >
    jf rt dl
    --flat
    --fail-no-op
    --retries=100
    --url="https://artifactory.ccdc.cam.ac.uk/artifactory"
    --user={{ ansible_deployment_artifactory_user }}
    --props="XCODE_VERSION={{ xcode_version }}"
    --password="{{ ansible_deployment_artifactory_key }}"
    "ccdc-3rdparty-macos-xcode-installers/"
    /tmp/xcode-{{ xcode_version }}
  environment:
    PATH: "/usr/local/bin:/usr/bin"
    CI: "true"
    JFROG_CLI_OFFER_CONFIG: "false"

- name: Install Xcode v{{ xcode_version }} # noqa: name[template]
  ansible.builtin.shell:
    cmd: /usr/local/bin/xcodes install --path /tmp/xcode-{{ xcode_version }} --experimental-unxip --version {{ xcode_version }} 
  args:
    creates: "/Applications/Xcode-{{ xcode_version }}.app"
  environment:
    PATH: /usr/local/bin:{{ ansible_env.PATH }}
  
- name: Accept Xcode licence # noqa: no-changed-when
  ansible.builtin.command: xcodebuild -license accept
  become: true

- name: Get list of installed packages # noqa: no-changed-when
  ansible.builtin.command: pkgutil --pkgs
  register: pkgutil_packages

- name: Get list of packages available with Xcode
  ansible.builtin.find:
    path: /Applications/Xcode_{{ xcode_version }}.app/Contents/Resources/Packages/
    patterns: "*.pkg"
    recurse: no
  register: packages

- name: Install Xcode packages # noqa: deprecated-module
  ansible.builtin.include_tasks: install-pkg.yml
  vars:
    package_file: "{{ package }}"
    package_list: "{{ pkgutil_packages.stdout }}"
  with_items: "{{ packages.files | map(attribute='path') | list }}"
  loop_control:
    loop_var: package
