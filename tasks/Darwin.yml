---
- name: Install Xcode v{{ xcode_version }} # noqa: name[template]
  ansible.builtin.shell:
    cmd: |
      set timeout 300
      echo $FASTLANE_SESSION >> /tmp/log.txt
      echo $XCODES_USERNAME >> /tmp/log.txt
      xcodes version >> /tmp/log.txt 
      
      xcodes install {{ xcode_version }} --select --use-fastlane-auth --experimental-unxip --aria2 aria2c --no-superuser --no-color >> /tmp/log.txt
      exit 0 
  args:
    creates: "/Applications/Xcode-{{ xcode_version }}.app"
  environment:
    FASTLANE_SESSION: "{{ FASTLANE_SESSION }}"
    XCODES_USERNAME: "{{ CCDC_APPLE_ID_USERNAME }}"
    XCODES_PASSWORD: "{{ CCDC_APPLE_ID_PASSWORD }}"
    PATH: /usr/local/bin:{{ ansible_env.PATH }}

- name: Accept Xcode licence # noqa: no-changed-when
  ansible.builtin.command: xcodebuild -license accept
  become: true

- name: Get list of installed packages # noqa: no-changed-when
  ansible.builtin.command: pkgutil --pkgs
  register: pkgutil_packages

- name: Get list of packages available with Xcode
  ansible.builtin.find:
    path: /Applications/Xcode_{{ xcode_version }}.app/Contents/Resources/Packages/
    patterns: "*.pkg"
    recurse: no
  register: packages

- name: Install Xcode packages # noqa: deprecated-module
  ansible.builtin.include_tasks: install-pkg.yml
  vars:
    package_file: "{{ package }}"
    package_list: "{{ pkgutil_packages.stdout }}"
  with_items: "{{ packages.files | map(attribute='path') | list }}"
  loop_control:
    loop_var: package
